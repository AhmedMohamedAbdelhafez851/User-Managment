@model AddUserViewModel

@{
    ViewData["Title"] = "Add User";
}

<h1>Add User</h1>

<form asp-action="Add" method="post" id="userForm" class="needs-validation" novalidate>
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label asp-for="FirstName" class="form-label"></label>
        <input asp-for="FirstName" class="form-control" />
        <span asp-validation-for="FirstName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="LastName" class="form-label"></label>
        <input asp-for="LastName" class="form-control" />
        <span asp-validation-for="LastName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="UserName" class="form-label"></label>
        <input asp-for="UserName" class="form-control" id="UserName" />
        <span asp-validation-for="UserName" class="text-danger"></span>
        <span id="UserNameError" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email" class="form-label"></label>
        <input asp-for="Email" class="form-control" id="Email" />
        <span asp-validation-for="Email" class="text-danger"></span>
        <span id="EmailError" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Password" class="form-label"></label>
        <input asp-for="Password" class="form-control" type="password" id="Password" />
        <span asp-validation-for="Password" class="text-danger"></span>
        <span id="PasswordError" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ConfirmPassword" class="form-label"></label>
        <input asp-for="ConfirmPassword" class="form-control" type="password" />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label class="form-label">Roles</label>
        @for (int i = 0; i < Model.Roles.Count; i++)
        {
            <div class="form-check">
                <input type="checkbox" asp-for="Roles[i].IsSelected" class="form-check-input" />
                <input type="hidden" asp-for="Roles[i].RoleId" />
                <input type="hidden" asp-for="Roles[i].RoleName" />
                <label class="form-check-label">@Model.Roles[i].RoleName</label>
            </div>
        }
    </div>
    <button type="submit" class="btn btn-primary">Add User</button>
</form>


@section Scripts {
    
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

<script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.5.1.min.js"></script>

<script>
    $(document).ready(function () {
        // Variables to track validation status
        var isEmailAvailable = false;
        var isUserNameAvailable = false;

        // Function to check username availability
        function checkUserNameAvailability(userName) {
            return $.post('@Url.Action("IsUserNameAvailable", "Users")', { userName: userName })
                .then(function (data) {
                    if (!data) {
                        $('#UserNameError').text('Username already exists.');
                        return false;
                    } else {
                        $('#UserNameError').text('');
                        return true;
                    }
                })
                .catch(function (error) {
                    console.error('Error checking username availability:', error);
                    return false;
                });
        }

        // Function to check email availability
        function checkEmailAvailability(email) {
            return $.post('@Url.Action("IsEmailAvailable", "Users")', { email: email })
                .then(function (data) {
                    if (!data) {
                        $('#EmailError').text('Email already exists.');
                        return false;
                    } else {
                        $('#EmailError').text('');
                        return true;
                    }
                })
                .catch(function (error) {
                    console.error('Error checking email availability:', error);
                    return false;
                });
        }

        // Function to validate password
        function validatePassword() {
            var password = $('#Password').val();
            var capitalLetterPattern = /[A-Z]/;
            if (!capitalLetterPattern.test(password)) {
                $('#PasswordError').text('Password must contain at least one capital letter.');
                return false;
            } else {
                $('#PasswordError').text('');
                return true;
            }
        }

        // Event handlers
        $('#UserName').blur(function () {
            var userName = $(this).val();
            checkUserNameAvailability(userName).then(function (result) {
                isUserNameAvailable = result;
            });
        });

        $('#Email').blur(function () {
            var email = $(this).val();
            checkEmailAvailability(email).then(function (result) {
                isEmailAvailable = result;
            });
        });

        $('#Password').blur(validatePassword);
        $('#Password').on('input', validatePassword);

        // Form submission handler
        $('#userForm').submit(async function (e) {
            e.preventDefault(); // Prevent default form submission

            var passwordValid = validatePassword();
            var userName = $('#UserName').val();
            var email = $('#Email').val();

            var userNameAvailable = await checkUserNameAvailability(userName);
            var emailAvailable = await checkEmailAvailability(email);

            if (passwordValid && userNameAvailable && emailAvailable) {
                this.submit(); // Proceed with form submission
            } else {
                if (!userNameAvailable) {
                    $('#UserNameError').text('Username already exists.');
                }
                if (!emailAvailable) {
                    $('#EmailError').text('Email already exists.');
                }
            }
        });
    });
</script>
